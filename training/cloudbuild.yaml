steps:

# Run unit tests and code coverage
- name: 'python:3.8'
  entrypoint: 'bash'
  # dir: 'tests'
  args: ['training/tests/run_tests.sh']
  id: 'Tests'

# compile pipeline
- name: 'python:3.8-slim'
  entrypoint: 'bash'
  dir: 'training/pipelines'
  args: ['pipeline_builder.sh', '${_PIPELINE_PATH}']
  waitFor: ['Tests']
  id: 'CompilePipeline'

# run pipeline
- name: 'python:3.8-slim'
  entrypoint: 'bash'
  dir: 'training/pipelines'
  args: ['pipeline_runner.sh', '${_PIPELINE_PATH}', '${_LOCATION}', '${_PIPELINE_PARAMS}', '${_PIPELINE_NAME}', '${PROJECT_ID}', '${_PIPELINE_ROOT}', '${_PIPELINE_RUN_NAME}', '${_SERVICE_ACCOUNT}']
  waitFor: ['CompilePipeline']
  id: 'RunPipeline'

timeout: 1800s

substitutions:
  _SERVICE_ACCOUNT: "vertex-pipelines-sa@${PROJECT_ID}.iam.gserviceaccount.com"
  _LOCATION: europe-west4
  _PIPELINE_NAME: REPO_NAME
  _PIPELINE_RUN_NAME: build-REPO_NAME-SHORT_SHA
  _PIPELINE_ROOT: "gs://propensity_model/cloud_build_pipeline/REPO_NAME/SHORT_SHA"
  _PIPELINE_PATH: "gs://propensity_model/cloud_build_pipeline/REPO_NAME/SHORT_SHA/training_pipeline.json"
  _PIPELINE_PARAMS: "{\"project_id\":\"ROJECT_ID\",\"bq_uri\":\"PROJECT.DATASET.TABLE\",\"label"\:\"label\",\"assets_prefix\":\"prop-SHORT_SHA\",\"location\":\"europe-west4\"}"
  
  
  

